{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Record Blanks API"
  },
  "basePath" : "/",
  "tags" : [ {
    "name" : "AgentsControllerAPI"
  }, {
    "name" : "IndexControllerAPI"
  }, {
    "name" : "UserControllerAPI"
  } ],
  "paths" : {
    "/agents" : {
      "get" : {
        "tags" : [ "AgentsControllerAPI" ],
        "summary" : "Get list of agents",
        "description" : "",
        "operationId" : "getAgentsInJSON",
        "responses" : {
          "200" : {
            "description" : "Return list of agents",
            "schema" : {
              "$ref" : "#/definitions/Agent"
            }
          },
          "404" : {
            "description" : "List of agents are empty",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AgentsControllerAPI" ],
        "summary" : "Add a new Agent",
        "description" : "",
        "operationId" : "addAgentInJSON",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Agent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a new Agent",
            "schema" : {
              "$ref" : "#/definitions/Agent"
            }
          },
          "400" : {
            "description" : "'unp' a field must be 9 characters",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "'unp' already exist in system",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/agents/{id}" : {
      "get" : {
        "tags" : [ "AgentsControllerAPI" ],
        "summary" : "Get Agent by ID",
        "description" : "",
        "operationId" : "getAgentByIdInJSON",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return Agent",
            "schema" : {
              "$ref" : "#/definitions/Agent"
            }
          },
          "404" : {
            "description" : "Agent not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AgentsControllerAPI" ],
        "summary" : "Update Agent by ID",
        "description" : "",
        "operationId" : "updateAgentInJSON",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Agent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return Agent",
            "schema" : {
              "$ref" : "#/definitions/Agent"
            }
          },
          "404" : {
            "description" : "Agent not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AgentsControllerAPI" ],
        "summary" : "Delete Agent by ID",
        "description" : "",
        "operationId" : "deleteAgentInJSON",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success response",
            "schema" : {
              "$ref" : "#/definitions/Agent"
            }
          },
          "404" : {
            "description" : "Agent not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "IndexControllerAPI" ],
        "summary" : "User login ",
        "description" : "",
        "operationId" : "login",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a User",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "403" : {
            "description" : "login or password is incorrect",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/logout" : {
      "get" : {
        "tags" : [ "IndexControllerAPI" ],
        "summary" : "User logout ",
        "description" : "",
        "operationId" : "logout",
        "responses" : {
          "200" : {
            "description" : "Logout user",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "user do not logged-in",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/registration" : {
      "post" : {
        "tags" : [ "IndexControllerAPI" ],
        "summary" : "New User registration",
        "description" : "",
        "operationId" : "registration",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a new User",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "'username' a field must be bellow 5 characters",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "'username' already exist in system",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "UserControllerAPI" ],
        "summary" : "Get list of users",
        "description" : "",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "Return list of users",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "List of users are empty",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "UserControllerAPI" ],
        "summary" : "Get User by ID",
        "description" : "",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return User",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "UserControllerAPI" ],
        "summary" : "Update User by ID",
        "description" : "",
        "operationId" : "updateById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return updated User",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "'username' a field must be bellow 5 characters",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "'username' already exist in system",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "server error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserControllerAPI" ],
        "summary" : "Delete User by ID",
        "description" : "",
        "operationId" : "deleteById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted successfully",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "User not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Agent" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "unp" : {
          "type" : "string"
        },
        "organization" : {
          "type" : "string"
        },
        "position" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "rs" : {
          "type" : "string"
        },
        "ks" : {
          "type" : "string"
        },
        "bank" : {
          "type" : "string"
        },
        "bik" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "Document" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "document" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "date" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "Driver" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "carModel" : {
          "type" : "string"
        },
        "carNumber" : {
          "type" : "string"
        },
        "trailerModel" : {
          "type" : "string"
        },
        "trailerNumber" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "code" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Role" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "unp" : {
          "type" : "string"
        },
        "organization" : {
          "type" : "string"
        },
        "position" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "rs" : {
          "type" : "string"
        },
        "ks" : {
          "type" : "string"
        },
        "bank" : {
          "type" : "string"
        },
        "bik" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "agents" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Agent"
          }
        },
        "drivers" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Driver"
          }
        },
        "documents" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Document"
          }
        },
        "roles" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Role"
          }
        }
      }
    }
  }
}